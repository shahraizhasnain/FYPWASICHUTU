@using SaudaMaster.SharedModel;
@model SaudaMaster.SharedModel.ItemViewModel






    @Html.AntiForgeryToken()


    <div class="row">
        <div class="col-lg-12">
            <section class="panel">

                <header class="panel-heading">
                   <b>PROMOTION</b> 
                </header>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="panel-body">
                    <div>
                        @Html.HiddenFor(model => model.ItemID)

                        @Html.HiddenFor(model => model.StoreID)


                    </div>
                  
                    <div class="form-group">
                        @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @*@Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control input-lg m-bot15", @required = "required" } })*@
                            @Html.DropDownListFor(m => m.ItemID, new SelectList(ViewBag.List, "ItemID", "ItemName"), new { @class = "form-control input-lg m-bot15", @id = "itemid" })
                            @Html.ValidationMessage("duplicate", new { @class = "text-danger" })
                            
                             @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Promotion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Promotion, new { htmlAttributes = new { @class = "form-control input-lg m-bot15", @id = "itempromotion", @required = "required" } })
                            @Html.ValidationMessage("duplicate", new { @class = "text-danger" })

                            @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                   
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" id="c_item"  class="btn btn-info" />
                        </div>
                    </div>

                </div>
            </section>
        </div>
    </div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


   }
    @@<script src="~/Scripts/jquery-1.10.2.js"></script>
@@<link href="~/Scripts/jquery-ui.css" rel="stylesheet" />
@@<script src="~/Scripts/jquery-ui.js"></script>
<script>
    console.log("hi");
    $('#c_item').unbind().click(function () {
        var ItemID = $('#itemid').val();
        var ItemPromotion = $('#itempromotion').val();
        console.log(ItemID, ItemPromotion);
        $.ajax({
            url: "@Url.Action("EditPromotion", "Item")",
        type: "Post",
        dataType: "json",
        data: { 'ItemID': ItemID, 'Promotion': ItemPromotion },
        success: function (data) {
            response((data, function (item) {
                return {item };
            }));
        }
    });
    });


</script>






@*<script type="text/javascript">
 $(function () {
            $("#ItemName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: '/Item/getitems/',
                        data: "{ 'prefix': '" + request.term + "'}",
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json; charset=utf-8",
                        success: function (data) {
                            response($.map(data, function (item) {
                                return item;
                            }))
                        },
                        error: function (response) {
                            alert(response.responseText);
                        },
                        failure: function (response) {
                            alert(response.responseText);
                        }
                    });
                },
                select: function (e, i) {
                    $("#ItemID").val(i.item.val);
                },
                minLength: 1
            });
        });
</script>*@
}